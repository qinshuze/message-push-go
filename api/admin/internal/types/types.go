// Code generated by goctl. DO NOT EDIT.
package types

type User struct {
	Id            int           `json:"id,optional"`
	Account       string        `json:"account,optional"`
	Nickname      string        `json:"nickname,optional"`
	Avatar        string        `json:"avatar,optional"`
	Email         string        `json:"email,optional"`
	LastLoginTime int           `json:"last_login_time,optional"`
	LastLoginIp   string        `json:"last_login_ip,optional"`
	CreateTime    int           `json:"create_time,optional"`
	IsRoot        bool          `json:"is_root,optional"`
	Roles         []*Role       `json:"roles,optional"`
	Permissions   []*Permission `json:"permissions"`
}

type LoginReq struct {
	Account  string `json:"account,optional" validate:"required"`
	Password string `json:"password,optional" validate:"required"`
}

type LoginRes struct {
	User
	Token string `json:"token"`
}

type Role struct {
	Id   int    `json:"id,optional"`
	Name string `json:"name,optional"`
}

type Permission struct {
	Id       int           `json:"id,optional"`
	Name     string        `json:"name,optional"`
	Key      string        `json:"_"`
	Children []*Permission `json:"children,optional"`
}

type LoginUser struct {
	Id            int    `json:"id,optional"`
	Account       string `json:"account,optional"`
	Nickname      string `json:"nickname,optional"`
	Avatar        string `json:"avatar,optional"`
	Email         string `json:"email,optional"`
	LastLoginTime int    `json:"last_login_time,optional"`
	LastLoginIp   string `json:"last_login_ip,optional"`
	CreateTime    string `json:"create_time,optional"`
	IsRoot        bool   `json:"is_root,optional"`
	Roles         []*Role
	Permissions   []*Permission
}
