// Code generated by goctl. DO NOT EDIT.
// Source: ws.proto

package server

import (
	"context"

	"ccps.com/service/ws/internal/logic"
	"ccps.com/service/ws/internal/svc"
	"ccps.com/service/ws/ws"
)

type WsServer struct {
	svcCtx *svc.ServiceContext
	ws.UnimplementedWsServer
}

func NewWsServer(svcCtx *svc.ServiceContext) *WsServer {
	return &WsServer{
		svcCtx: svcCtx,
	}
}

func (s *WsServer) Ping(ctx context.Context, in *ws.PingReq) (*ws.PingRes, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

// JoinRoom 加入房间
func (s *WsServer) JoinRoom(ctx context.Context, in *ws.JoinRoomReq) (*ws.JoinRoomRes, error) {
	l := logic.NewJoinRoomLogic(ctx, s.svcCtx)
	return l.JoinRoom(in)
}

// LeaveRoom 离开房间
func (s *WsServer) LeaveRoom(ctx context.Context, in *ws.LeaveRoomReq) (*ws.LeaveRoomRes, error) {
	l := logic.NewLeaveRoomLogic(ctx, s.svcCtx)
	return l.LeaveRoom(in)
}

// AddTag 添加标签
func (s *WsServer) AddTag(ctx context.Context, in *ws.AddTagsReq) (*ws.AddTagsResp, error) {
	l := logic.NewAddTagLogic(ctx, s.svcCtx)
	return l.AddTag(in)
}

// RemoveTag 移除标签
func (s *WsServer) RemoveTag(ctx context.Context, in *ws.RemoveTagsReq) (*ws.RemoveTagsResp, error) {
	l := logic.NewRemoveTagLogic(ctx, s.svcCtx)
	return l.RemoveTag(in)
}

// Count 获取客户端连接数量
func (s *WsServer) Count(ctx context.Context, in *ws.CountReq) (*ws.CountRes, error) {
	l := logic.NewCountLogic(ctx, s.svcCtx)
	return l.Count(in)
}

// Push 推送消息
func (s *WsServer) Push(ctx context.Context, in *ws.PushReq) (*ws.PushRes, error) {
	l := logic.NewPushLogic(ctx, s.svcCtx)
	return l.Push(in)
}

// Clients 查询客户端
func (s *WsServer) Clients(ctx context.Context, in *ws.ClientsReq) (*ws.ClientsRes, error) {
	l := logic.NewClientsLogic(ctx, s.svcCtx)
	return l.Clients(in)
}
